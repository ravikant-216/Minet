name: BOOTCAMP- BACKEND deployment
run-name: BACKEND deployment update triggered by ${{ github.actor }}.
on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backendDeploy.yaml"

env:
  GITHUB_USER: ishtiaqsamdani007

jobs:
  backendFoldersChanged:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend

    outputs:
      changed-services: ${{ steps.set-output.outputs.changed-services }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37

      - name: Determine changed services
        id: set-output
        run: |
          changed_services=()
          services=("Api-Gateway" "Crypto-Service" "Portfolio-Service" "Service-Registry" "Transaction-Service" "User-Service")  
          backend_workflow_changed=false
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              path=$(echo "$file" | cut -d'/' -f3)
              if [[ "backend.yaml" == $path ]]; then
                  changed_services=("${services[@]}")
                  backend_workflow_changed=true
                  break
              fi
          done

          if [[ $backend_workflow_changed == false ]]; then
              for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                  path=$(echo "$file" | cut -d'/' -f2)
                  already_exists=false
                  for changed in "${changed_services[@]}"; do
                      if [[ $changed == $path ]]; then
                          already_exists=true
                          break
                      fi
                  done
                  if [[ $already_exists == false ]]; then
                      for service in "${services[@]}"; do
                          if [[ $service == $path ]]; then
                              changed_services+=("$path")
                              break
                          fi
                      done  
                  fi
              done
          fi

          json_array="[\"${changed_services[0]}\""
          for i in "${changed_services[@]:1}"; do
              json_array+=",\"$i\""
          done
          json_array+="]"

          echo "::set-output name=changed-services::$json_array"
          echo "Changed services normal: ${changed_services[*]}"

  deploy:
    runs-on: ubuntu-latest
    needs: backendFoldersChanged
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend
    strategy:
      matrix:
        service: ${{fromJson(needs.backendFoldersChanged.outputs.changed-services)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.CR_PAT }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Adding EKS cluster and Build and Deploy the service
        env:
          aws_region: ${{ secrets.AWS_REGION}}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
          SERVICE_NAME: ${{ matrix.service }}
        run: |
          aws eks --region $aws_region update-kubeconfig --name $cluster_name
          cd ${SERVICE_NAME}

          mvn clean package -Dmaven.test.skip=true
          SERVICE_NAME_LOWER=$(echo $SERVICE_NAME | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/${{ env.GITHUB_USER }}/bc-123-backend-${SERVICE_NAME_LOWER}:v${{ github.run_number }} .
          docker tag ghcr.io/${{ env.GITHUB_USER }}/bc-123-backend-${SERVICE_NAME_LOWER}:v${{ github.run_number }} ghcr.io/${{ env.GITHUB_USER }}/bc-123-backend-${SERVICE_NAME_LOWER}:latest
          docker push ghcr.io/${{ env.GITHUB_USER }}/bc-123-backend-${SERVICE_NAME_LOWER}:v${{ github.run_number }}
          docker push ghcr.io/${{ env.GITHUB_USER }}/bc-123-backend-${SERVICE_NAME_LOWER}:latest
          kubectl set image deployment/${SERVICE_NAME_LOWER} ${SERVICE_NAME_LOWER}-container=ghcr.io/${{ env.GITHUB_USER }}/bc-123-backend-${SERVICE_NAME_LOWER}:v${{ github.run_number }}
      - name: remove kubeconfig file
        run: |
          ls ~/.kube
          rm -rf ~/.kube
